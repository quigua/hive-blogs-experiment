---
import Layout from '../layouts/Layout.astro';
import BlogPostCard from '../components/BlogPostCard.astro';
import '../styles/global.css';

// Variables de estado del lado del cliente (para Vue, React, Svelte, etc.)
// Astro renderiza esto en el servidor, pero el script de abajo lo usará en el cliente.
const username = 'quigua';
const initialLimit = 10;
---

<Layout title="Reblogs de Hive (Prueba)">
  <main class="container mx-auto p-4 max-w-3xl">
    <h1 class="text-3xl font-bold text-center my-8">Reblogs de {username} (Modo de Prueba)</h1>

    <div id="posts-container" class="space-y-6">
      </div>

    <div class="flex justify-center mt-8">
      <button id="load-more-btn" class="bg-hive-blue hover:bg-hive-darkblue text-white font-bold py-2 px-6 rounded-lg shadow-md transition duration-300 ease-in-out">
        Cargar más reblogs
      </button>
    </div>

    <div id="no-more-posts" class="text-center text-gray-500 mt-4 hidden">
      No hay más reblogs para cargar.
    </div>
  </main>
</Layout>

<script is:inline>
  const username = 'quigua';
  let nextStartAuthor = null;
  let nextStartPermlink = null;
  let hasMore = true; // Asumimos que hay más hasta que la API diga lo contrario.
  const limit = 10; // Número de posts a cargar por vez

  const postsContainer = document.getElementById('posts-container');
  const loadMoreBtn = document.getElementById('load-more-btn');
  const noMorePostsDiv = document.getElementById('no-more-posts');

  async function fetchPosts() {
    loadMoreBtn.disabled = true; // Deshabilita el botón mientras carga
    loadMoreBtn.textContent = 'Cargando...';

    const params = new URLSearchParams({
      username: username,
      limit: limit,
    });

    if (nextStartAuthor && nextStartPermlink) {
      params.append('start_author', nextStartAuthor);
      params.append('start_permlink', nextStartPermlink);
    }

    try {
      const response = await fetch(`/api/get-user-posts?${params.toString()}`);
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      const data = await response.json();
      console.log('Datos recibidos:', data); // Para depuración

      if (data.posts && data.posts.length > 0) {
        data.posts.forEach(post => {
          const postElement = document.createElement('div');
          postElement.className = 'bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200';
          postElement.innerHTML = `
            <h2 class="text-xl font-semibold text-gray-800">${post.title}</h2>
            <p class="text-sm text-gray-600 mb-2">
              Publicado por <span class="font-medium text-hive-darkblue">${post.author}</span>
              el ${new Date(post.created).toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' })}
            </p>
            <p class="text-gray-700 line-clamp-3">${post.body.substring(0, 200)}...</p>
            <a href="https://hive.blog/@${post.author}/${post.permlink}" target="_blank" rel="noopener noreferrer" class="text-hive-blue hover:underline mt-2 inline-block">
              Leer más
            </a>
          `;
          postsContainer.appendChild(postElement);
        });
      } else {
        console.log('No se recibieron posts o el array está vacío.');
      }

      nextStartAuthor = data.nextStartAuthor;
      nextStartPermlink = data.nextStartPermlink;
      hasMore = data.hasMore;

      if (!hasMore) {
        loadMoreBtn.classList.add('hidden');
        noMorePostsDiv.classList.remove('hidden');
      }

    } catch (error) {
      console.error('Error al cargar los posts:', error);
      postsContainer.innerHTML = `<p class="text-red-500 text-center">Error al cargar reblogs: ${error.message}</p>`;
      loadMoreBtn.classList.add('hidden');
    } finally {
      loadMoreBtn.disabled = false;
      loadMoreBtn.textContent = 'Cargar más reblogs';
    }
  }

  // Cargar los primeros posts al iniciar la página
  document.addEventListener('DOMContentLoaded', fetchPosts);

  // Event listener para el botón "Cargar más"
  loadMoreBtn.addEventListener('click', fetchPosts);
</script>

<style is:global>
  .bg-hive-blue {
    background-color: #007bff; /* Un azul genérico, ajusta al de Hive si es diferente */
  }
  .hover\:bg-hive-darkblue:hover {
    background-color: #0056b3; /* Un azul más oscuro para hover */
  }
  .text-hive-blue {
    color: #007bff;
  }
  .text-hive-darkblue {
    color: #0056b3;
  }
</style>